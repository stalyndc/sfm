<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
  <channel>
    <title>Chaotic Blog of Artyom Bologov</title>
    <link>https://aartaka.me/</link>
    <description>Artyom's, blog on programming, art, and research.</description>
    <docs>https://www.rssboard.org/rss-specification</docs>
    <item>
      <title>Welcome!</title>
      <author>mail@aartaka.me (Artyom Bologov)</author>
      <link>null</link>
      <guid>null</guid>
      <pubDate></pubDate>
      <description>
        This is basically a welcoming note for you, whoever you are! It also serves the purpose of properly aligning XML tags, but hush...
      </description>
    </item>
    <item>
      <title>Customizing Lisp REPLs</title>
      <author>rss@aartaka.me (Artyom Bologov)</author>
      <link>https://aartaka.me/customize-repl/</link>
      <guid>https://aartaka.me/customize-repl/</guid>
      <pubDate>Mon, 18 Aug 2025 02:45:00 +0400</pubDate>
      <description>
        &lt;a href=https://aartaka.me/customize-repl&gt;Read on the website: &lt;/a&gt;
        Lisp REPLs are a good tool, but some consider it too rigid. Which leads to abundance of proxy REPLs. Except… you don’t need them!
      </description>
    </item>
    <item>
      <title>Just Don’t</title>
      <author>rss@aartaka.me (Artyom Bologov)</author>
      <link>https://aartaka.me/just/</link>
      <guid>https://aartaka.me/just/</guid>
      <pubDate>Wed, 6 Aug 2025 00:20:00 +0400</pubDate>
      <description>
        &lt;a href=https://aartaka.me/just&gt;Read on the website: &lt;/a&gt;
        Just stop artificially restricting yourself to bad software.
      </description>
    </item>
    <item>
      <title>Plaintext Email Formatting</title>
      <author>rss@aartaka.me (Artyom Bologov)</author>
      <link>https://aartaka.me/email-formatting/</link>
      <guid>https://aartaka.me/email-formatting/</guid>
      <pubDate>Tue, 22 Jul 2025 00:05:00 +0400</pubDate>
      <description>
        &lt;a href=https://aartaka.me/email-formatting&gt;Read on the website: &lt;/a&gt;
        Plaintext emails are slowly becoming an artifact of the past. Still, there’s a lot interesting things about plaintext emails. Including... plaintext-only formatting!
      </description>
    </item>
    <item>
      <title>Why I Am Stupid</title>
      <author>rss@aartaka.me (Artyom Bologov)</author>
      <link>https://aartaka.me/stupid/</link>
      <guid>https://aartaka.me/stupid/</guid>
      <pubDate>Tue, 8 Jul 2025 18:25:00 +0400</pubDate>
      <description>
        &lt;a href=https://aartaka.me/stupid&gt;Read on the website: &lt;/a&gt;
        Being stupid is a stigma. But it's also a way of doing my job well or destroying the system the job perpetuates. Come be stupid with me!
      </description>
    </item>
    <item>
      <title>Lisp Logical Pathnames</title>
      <author>rss@aartaka.me (Artyom Bologov)</author>
      <link>https://aartaka.me/logical-pathnames/</link>
      <guid>https://aartaka.me/logical-pathnames/</guid>
      <pubDate>Thu, 26 Jun 2025 02:15:00 +0400</pubDate>
      <description>
        &lt;a href=https://aartaka.me/logical-pathnames&gt;Read on the website: &lt;/a&gt;
        Logical pathnames are both a useful and obscure feature of Common Lisp. Here I’m trying to figure them out.
      </description>
    </item>
    <item>
      <title>Lost Computation</title>
      <author>rss@aartaka.me (Artyom Bologov)</author>
      <link>https://aartaka.me/lost-compute/</link>
      <guid>https://aartaka.me/lost-compute/</guid>
      <pubDate>Wed, 11 Jun 2025 22:00:00 +0400</pubDate>
      <description>
        &lt;a href=https://aartaka.me/lost-compute&gt;Read on the website: &lt;/a&gt;
        We keep losing context and computation when running programs. But we don't have to. Let’s see how this lost compute can be avoided.
      </description>
    </item>
    <item>
      <title>Explanations, not Algorithms</title>
      <author>rss@aartaka.me (Artyom Bologov)</author>
      <link>https://aartaka.me/explanations/</link>
      <guid>https://aartaka.me/explanations/</guid>
      <pubDate>Tue, 27 May 2025 19:40:00 +0400</pubDate>
      <description>
        &lt;a href=https://aartaka.me/explanations&gt;Read on the website: &lt;/a&gt;
        Algorithms are all the rage in tech. And yet, they are useless unless you use them as black boxes. Better disseminate explanations—they are much more understandable and reproducible.
      </description>
    </item>
    <item>
      <title>Making Sense of Lambda Calculus 5: Bring Computation to (Aggregate) Data</title>
      <author>rss@aartaka.me (Artyom Bologov)</author>
      <link>https://aartaka.me/lambda-5/</link>
      <guid>https://aartaka.me/lambda-5/</guid>
      <pubDate>Thu, 15 May 2025 21:45:00 +0400</pubDate>
      <description>
        &lt;a href=https://aartaka.me/lambda-5&gt;Read on the website: &lt;/a&gt;
        Any programming system needs a ways to aggregate values. Be it with structures, arrays, or closures. Lambda Calculus has these ways, so let's see what's there.
      </description>
    </item>
    <item>
      <title>Transparent UIs</title>
      <author>rss@aartaka.me (Artyom Bologov)</author>
      <link>https://aartaka.me/transparent-ui/</link>
      <guid>https://aartaka.me/transparent-ui/</guid>
      <pubDate>Mon, 5 May 2025 20:13:00 +0400</pubDate>
      <description>
        &lt;a href=https://aartaka.me/transparent-ui&gt;Read on the website: &lt;/a&gt;
        As GUI complexity grows, transparency plummets. Any way to fix that?
      </description>
    </item>
    <item>
      <title>Designing the Language by Cutting Corners</title>
      <author>rss@aartaka.me (Artyom Bologov)</author>
      <link>https://aartaka.me/cutting-corners/</link>
      <guid>https://aartaka.me/cutting-corners/</guid>
      <pubDate>Tue, 29 Apr 2025 21:10:00 +0400</pubDate>
      <description>
        &lt;a href=https://aartaka.me/cutting-corners&gt;Read on the website: &lt;/a&gt;
        Designing programming languages is hard. But does it have to be this way?
      </description>
    </item>
    <item>
      <title>Some Things Have To Be Ugly</title>
      <author>rss@aartaka.me (Artyom Bologov)</author>
      <link>https://aartaka.me/ugly-things/</link>
      <guid>https://aartaka.me/ugly-things/</guid>
      <pubDate>Tue, 8 Apr 2025 22:55:00 +0400</pubDate>
      <description>
        &lt;a href=https://aartaka.me/ugly-things&gt;Read on the website: &lt;/a&gt;
        Embrace ugly code. Maintain ugly code. Write ugly code.
      </description>
    </item>
    <item>
      <title>Uncovering Tarot Biases with Simple NLP</title>
      <author>rss@aartaka.me (Artyom Bologov)</author>
      <link>https://aartaka.me/tarot-biases/</link>
      <guid>https://aartaka.me/tarot-biases/</guid>
      <pubDate>Mon, 31 Mar 2025 00:30:00 +0400</pubDate>
      <description>
        &lt;a href=https://aartaka.me/tarot-biases&gt;Read on the website: &lt;/a&gt;
        Tarot is nice. It's showing us some archetypes and allowing to create stories. But are these stories as diverse as we are? No, and here're some simple NLP approaches to learning why.
      </description>
    </item>
    <item>
      <title>LLMs, But Only Because Your Tech SUCKS</title>
      <author>rss@aartaka.me (Artyom Bologov)</author>
      <link>https://aartaka.me/llms-suck/</link>
      <guid>https://aartaka.me/llms-suck/</guid>
      <pubDate>Sun, 23 Mar 2025 20:15:00 +0400</pubDate>
      <description>
        &lt;a href=https://aartaka.me/llms-suck&gt;Read on the website: &lt;/a&gt;
        LLMs and Vibe Coding are there. But why? Because our tech is not that advanced and we're disempowered by it. Make tech not suck, and you'll need no LLMs.
      </description>
    </item>
    <item>
      <title>Making Sense of Lambda Calculus 4: Applicative vs. Normal Order</title>
      <author>rss@aartaka.me (Artyom Bologov)</author>
      <link>https://aartaka.me/lambda-4/</link>
      <guid>https://aartaka.me/lambda-4/</guid>
      <pubDate>Tue, 18 Mar 2025 02:10:00 +0400</pubDate>
      <description>
        &lt;a href=https://aartaka.me/lambda-4&gt;Read on the website: &lt;/a&gt;
        Lambda Calculus is a simple computation model that's easy to port to any language with functions. Probably? Hopefully? Actually, there are some problems when mapping from LC to programming. Here are some, with ways to cope.
      </description>
    </item>
    <item>
      <title>How I Write Generics</title>
      <author>rss@aartaka.me (Artyom Bologov)</author>
      <link>https://aartaka.me/my-generics/</link>
      <guid>https://aartaka.me/my-generics/</guid>
      <pubDate>Sun, 9 Mar 2025 03:10:00 +0400</pubDate>
      <description>
        &lt;a href=https://aartaka.me/my-generics&gt;Read on the website: &lt;/a&gt;
        With great generic functions comes great responsibility of making them readable and maintainable.
      </description>
    </item>
    <item>
      <title>Postmodern Front-end</title>
      <author>rss@aartaka.me (Artyom Bologov)</author>
      <link>https://aartaka.me/postmodern-front-end/</link>
      <guid>https://aartaka.me/postmodern-front-end/</guid>
      <pubDate>Thu, 27 Feb 2025 00:20:00 +0400</pubDate>
      <description>
        &lt;a href=https://aartaka.me/postmodern-front-end&gt;Read on the website: &lt;/a&gt;
        or just use CSS lol.
        Slides for the seminar I gave at work regarding modern CSS niceties.
        Deprecating a whole class of "modern" front-end practices/technologies.
      </description>
    </item>
    <item>
      <title>CSS-only Syntax Highlighting</title>
      <author>rss@aartaka.me (Artyom Bologov)</author>
      <link>https://aartaka.me/css-only-highlight/</link>
      <guid>https://aartaka.me/css-only-highlight/</guid>
      <pubDate>Wed, 19 Feb 2025 00:10:00 +0400</pubDate>
      <description>
        &lt;a href=https://aartaka.me/css-only-highlight&gt;Read on the website: &lt;/a&gt;
        I hate JS. (No, not really.) I don't want to have even a line of JS on my webite. Especially for something as simple as syntax highlighting. I should be able to do that with some CSS and minor preprocessing, right?
      </description>
    </item>
    <item>
      <title>Tarot 3.2</title>
      <author>rss@aartaka.me (Artyom Bologov)</author>
      <link>https://aartaka.me/tarot/</link>
      <guid>https://aartaka.me/tarot/</guid>
      <pubDate>Mon, 3 Feb 2025 01:20:00 +0400</pubDate>
      <description>
        &lt;a href=https://aartaka.me/tarot&gt;Read on the website: &lt;/a&gt;
        Tarot is a nice thing, but most websites about it are a pain to use. So I made my own, in HTML 3.2!
      </description>
    </item>
    <item>
      <title>All Lisp Indentation Schemes Are Ugly</title>
      <author>rss@aartaka.me (Artyom Bologov)</author>
      <link>https://aartaka.me/lisp-indent</link>
      <guid>https://aartaka.me/lisp-indent</guid>
      <pubDate>Sun, 19 Jan 2025 16:50:00 +0400</pubDate>
      <description>
        &lt;a href=https://aartaka.me/lisp-indent&gt;Read on the website: &lt;/a&gt;
        Indentation styles are a hot topic in every language. So let's see how Lisps do indentation!
      </description>
    </item>
    <item>
      <title>Customizing ed(1)</title>
      <author>rss@aartaka.me (Artyom Bologov)</author>
      <link>https://aartaka.me/customize-ed</link>
      <guid>https://aartaka.me/customize-ed</guid>
      <pubDate>Sat, 28 Dec 2024 21:20:00 +0400</pubDate>
      <description>
        &lt;a href=https://aartaka.me/customize-ed&gt;Read on the website: &lt;/a&gt;
        ed is too simple to be customizable, right? Maybe it is not customizable, but the environment around it is!
      </description>
    </item>
    <item>
      <title>Codeberg Pages with SSL and Custom Domain</title>
      <author>rss@aartaka.me (Artyom Bologov)</author>
      <link>https://aartaka.me/codeberg-pages</link>
      <guid>https://aartaka.me/codeberg-pages</guid>
      <pubDate>Sun, 22 Dec 2024 07:20:00 +0400</pubDate>
      <description>
        &lt;a href=https://aartaka.me/codeberg-pages&gt;Read on the website: &lt;/a&gt;
        Moving from Gitlab Pages to Codeberg Pages. There are some difficulties, but nothing impossible. Here's what I did.
      </description>
    </item>
    <item>
      <title>Procnames Start Lines. But Why?</title>
      <author>rss@aartaka.me (Artyom Bologov)</author>
      <link>https://aartaka.me/procnames</link>
      <guid>https://aartaka.me/procnames</guid>
      <pubDate>Sat, 21 Dec 2024 00:10:00 +0400</pubDate>
      <description>
        &lt;a href=https://aartaka.me/procnames&gt;Read on the website: &lt;/a&gt;
        Putting procedure names at column 0 is a widespread convention in C codebases. But the exact reasons are not really elaborated anywhere. We just do that. So I decided to make my own summary for why it's a thing.
      </description>
    </item>
    <item>
      <title>Using ed(1) as My Static Site Generator</title>
      <author>rss@aartaka.me (Artyom Bologov)</author>
      <link>https://aartaka.me/this-post-is-ed</link>
      <guid>https://aartaka.me/this-post-is-ed</guid>
      <pubDate>Wed, 11 Dec 2024 11:00:00 +0400</pubDate>
      <description>
        &lt;a href=https://aartaka.me/this-post-is-ed&gt;Read on the website: &lt;/a&gt;
        You can tell I'm an ed fan. Not only do I use it for esoteric challenges or compiler building, it also is my new SSG (Static Site Generator.) So here's how it works:
      </description>
    </item>
    <item>
      <title>Three Minutes Writing</title>
      <author>rss@aartaka.me (Artyom Bologov)</author>
      <link>https://aartaka.me/3mins</link>
      <guid>https://aartaka.me/3mins</guid>
      <pubDate>Sun, 1 Dec 2024 11:55:00 +0400</pubDate>
      <description>
        &lt;a href=https://aartaka.me/3mins&gt;Read on the website: &lt;/a&gt;
        We're all suffering with attention deficit. So let's finally write like we do.
      </description>
    </item>
    <item>
      <title>Generating This Post Without LLMs</title>
      <author>rss@aartaka.me (Artyom Bologov)</author>
      <link>https://aartaka.me/generated</link>
      <guid>https://aartaka.me/generated</guid>
      <pubDate>Wed, 26 Nov 2024 21:35:00 +0400</pubDate>
      <description>
        &lt;a href=https://aartaka.me/generated&gt;Read on the website: &lt;/a&gt;
        Text generation was a lot of fun before ChatGPT—it was chaotic and deranged. I written this post using the old text generation techniques. You'll like how absurd it turned out, I promise!
      </description>
    </item>
    <item>
      <title>Printf Is Useless</title>
      <author>rss@aartaka.me (Artyom Bologov)</author>
      <link>https://aartaka.me/printf</link>
      <guid>https://aartaka.me/printf</guid>
      <pubDate>Sun, 17 Nov 2024 21:25:00 +0400</pubDate>
      <description>
        &lt;a href=https://aartaka.me/printf&gt;Read on the website: &lt;/a&gt;
        Printf (and the derivatives every language has) are a bane that should only be tolerated when printing floats. Otherwise, I beg you, use string interpolation or structured output.
      </description>
    </item>
    <item>
      <title>s/sed/ed</title>
      <author>rss@aartaka.me (Artyom Bologov)</author>
      <link>https://aartaka.me/sed-ed</link>
      <guid>https://aartaka.me/sed-ed</guid>
      <pubDate>Wed, 13 Nov 2024 1:47:00 +0400</pubDate>
      <description>
        &lt;a href=https://aartaka.me/sed-ed&gt;Read on the website: &lt;/a&gt;
        ed is a stupid simple text editor. sed is a nice streaming text processing tool. Why would one even want to use ed for anything, let alone for text processing if there's sed?
      </description>
    </item>
    <item>
      <title>5 (Wrong) Regex To Parse Parentheses</title>
      <author>rss@aartaka.me (Artyom Bologov)</author>
      <link>https://aartaka.me/paren-regex</link>
      <guid>https://aartaka.me/paren-regex</guid>
      <pubDate>Sun, 3 Nov 2024 19:10:00 +0400</pubDate>
      <description>
        &lt;a href=https://aartaka.me/paren-regex&gt;Read on the website: &lt;/a&gt;
        Regex are powerful. To the point you may try to parse HTML or Lisp with it. A doomed enterprise, right? But it's possible, actually.

      </description>
    </item>
    <item>
      <title>Parameterized Procedures for Testing, Mocking, Plumbing</title>
      <author>rss@aartaka.me (Artyom Bologov)</author>
      <link>https://aartaka.me/parameterized</link>
      <guid>https://aartaka.me/parameterized</guid>
      <pubDate>Fri, 25 Oct 2024 19:45:00 +0400</pubDate>
      <description> &lt;a href=https://aartaka.me/parameterized&gt;Read on the website: &lt;/a&gt;
      It's often the case that a functional (Scheme?) codebase needs to plug something into the computation. Here's one way to do that with almost no syntactic overhead.
      </description>
    </item>
    <item>
      <title>C Until It Is No Longer C</title>
      <author>rss@aartaka.me (Artyom Bologov)</author>
      <link>https://aartaka.me/c-not-c</link>
      <guid>https://aartaka.me/c-not-c</guid>
      <pubDate>Mon, 23 Sep 2024 23:00:00 +0400</pubDate>
      <description>
        &lt;a href=https://aartaka.me/c-not-c&gt;Read on the website: &lt;/a&gt;
        Get horrified by how pretty I'm making my C code!
      </description>
    </item>
    <item>
      <title>There Is No Such Thing As The Regex</title>
      <author>rss@aartaka.me (Artyom Bologov)</author>
      <link>https://aartaka.me/the-regex</link>
      <guid>https://aartaka.me/the-regex</guid>
      <pubDate>Wed, 11 Sep 2024 22:50:00 +0400</pubDate>
      <description>
        &lt;a href=https://aartaka.me/the-regex&gt;Read on the website: &lt;/a&gt;
        Regular expressions seem to be quite coherent, right? This scary (.*[^}(]) symbol soup that only the select few can master. Except that there are at least half a dozen (slightly incompatible) varieties of this soup. Bon Appétit!
      </description>
    </item>
    <item>
      <title>A&#39;s Commit Messages Guide: Location, Action, Rationale</title>
      <author>rss@aartaka.me (Artyom Bologov)</author>
      <link>https://aartaka.me/commitmsg</link>
      <guid>https://aartaka.me/commitmsg</guid>
      <pubDate>Sun, 01 Sep 2024 17:30:00 +0400</pubDate>
      <description>
        &lt;a href=https://aartaka.me/commitmsg&gt;Read on the website: &lt;/a&gt;
        Commit messages are the critical thing you stare at often enough. So better make them informational and readable.
      </description>
    </item>
    <item>
      <title>I Am Not an AI—My Writing Is Terible</title>
      <author>rss@aartaka.me (Artyom Bologov)</author>
      <link>https://aartaka.me/not-ai</link>
      <guid>https://aartaka.me/not-ai</guid>
      <pubDate>Tue, 27 Aug 2024 19:30:00 +0400</pubDate>
      <description>
        &lt;a href=https://aartaka.me/not-ai&gt;Read on the website: &lt;/a&gt;
        My writing is imperfect. "AI" could help. But, you know, I no longer want to hide myself. My terible writing is the only things that differentiates me from the sterile AI slop you find everywhere now.
      </description>
    </item>
    <item>
      <title>Explaining Wisp Without Parentheses</title>
      <author>rss@aartaka.me (Artyom Bologov)</author>
      <link>https://aartaka.me/wisp</link>
      <guid>https://aartaka.me/wisp</guid>
      <pubDate>Mon, 19 Aug 2024 23:22:00 +0400</pubDate>
      <description>
        &lt;a href=https://aartaka.me/wisp&gt;Read on the website: &lt;/a&gt;
        Wisp is an indentation-sensitive syntax for Scheme. Its semantics are defined in terms of nested parentheses, though. But what if it was defined in other terms?
      </description>
    </item>
    <item>
      <title>Disroot Custom Domain Email Gotcha: Do Not Change the Settings!</title>
      <author>rss@aartaka.me (Artyom Bologov)</author>
      <link>https://aartaka.me/disroot-gotcha</link>
      <guid>https://aartaka.me/disroot-gotcha</guid>
      <pubDate>Wed, 31 Jul 2024 18:23:00 +0400</pubDate>
      <description>
        &lt;a href=https://aartaka.me/disroot-gotcha&gt;Read on the website: &lt;/a&gt;
        I'm a happy Disroot custom domain email user now! Here's a small tip that helped me set things up after linking.
      </description>
    </item>
    <item>
      <title>I Want My Scrollbar Back (A 2-Minute Read)</title>
      <author>rss@aartaka.me (Artyom Bologov)</author>
      <link>https://aartaka.me/scrollbar</link>
      <guid>https://aartaka.me/scrollbar</guid>
      <pubDate>Fri, 12 Jul 2024 12:45:00 +0400</pubDate>
      <description>
        &lt;a href=https://aartaka.me/scrollbar&gt;Read on the website: &lt;/a&gt;
        The modern web is empowered by dynamic content loading. The modern reading is impoverished by it.
      </description>
    </item>
    <item>
      <title>Prose vs. Tweet: How We Tell Stories</title>
      <author>rss@aartaka.me (Artyom Bologov)</author>
      <link>https://aartaka.me/prose-vs-tweet</link>
      <guid>https://aartaka.me/prose-vs-tweet</guid>
      <pubDate>Fri, 21 Jun 2024 20:00:00 +0400</pubDate>
      <description>
        &lt;a href=https://aartaka.me/prose-vs-tweet&gt;Read on the website: &lt;/a&gt;
        We always told stories. We always will. Though our stories fit into 140 chars now, which is both a blessing and a curse.
      </description>
    </item>
    <item>
      <title>Making Sense of Lambda Calculus 3: Truth or Dare With Booleans</title>
      <author>rss@aartaka.me (Artyom Bologov)</author>
      <link>https://aartaka.me/lambda-3</link>
      <guid>https://aartaka.me/lambda-3</guid>
      <pubDate>Wed, 12 Jun 2024 17:12:00 +0400</pubDate>
      <description>
        &lt;a href=https://aartaka.me/lambda-3&gt;Read on the website: &lt;/a&gt;
        Booleans are simple and elegant in Lambda Calculus, but they take some getting used to. This post tries to explain LC booleans to at least myself.
      </description>
    </item>
    <item>
      <title>Gemtext Is Not Accessible</title>
      <author>rss@aartaka.me (Artyom Bologov)</author>
      <link>https://aartaka.me/gmi-a11y</link>
      <guid>https://aartaka.me/gmi-a11y</guid>
      <pubDate>Tue, 4 Jun 2024 23:47:00 +0400</pubDate>
      <description>
        &lt;a href=https://aartaka.me/gmi-a11y&gt;Read on the website: &lt;/a&gt;
        Gemtext is a minimalist markup/hypertext format initially from Gemini network. It's intended to be a lightweight, easy to learn, and accessible language... But at least the latter is not true with the current state of things.
      </description>
    </item>
    <item>
      <title>Common Lisp Is Not a Single Language, It Is Lots</title>
      <author>rss@aartaka.me (Artyom Bologov)</author>
      <link>https://aartaka.me/cl-is-lots</link>
      <guid>https://aartaka.me/cl-is-lots</guid>
      <pubDate>Thu, 23 May 2024 14:25:00 +0400</pubDate>
      <description> &lt;a href=https://aartaka.me/cl-is-lots&gt;Read on the website: &lt;/a&gt;
      Lisp is an ambiguous category. But Common Lisp isn't, right? It's a restricted self-sufficient language, after all.
      </description>
    </item>
    <item>
      <title>Making Sense of Lambda Calculus 2: Numerous Quirks of Numbers</title>
      <author>rss@aartaka.me (Artyom Bologov)</author>
      <link>https://aartaka.me/lambda-2</link>
      <guid>https://aartaka.me/lambda-2</guid>
      <pubDate>Fri, 10 May 2024 19:22:00 +0400</pubDate>
      <description>
        &lt;a href=https://aartaka.me/lambda-2&gt;Read on the website: &lt;/a&gt;
        Lambda Calculus is extremely elegant, including in how it handles numbers. But this elegance often comes at the cost of understandability. This post goes through examples of arithmetics in Lambda Calculus to understand how they work.
      </description>
    </item>
    <item>
      <title>Guile Optimization Gotchas: There Is No Free Beer, Only Cheap</title>
      <author>rss@aartaka.me (Artyom Bologov)</author>
      <link>https://aartaka.me/guile-optimization</link>
      <guid>https://aartaka.me/guile-optimization</guid>
      <pubDate>Tue, 23 Apr 2024 21:46:00 +0400</pubDate>
      <description>
        &lt;a href=https://aartaka.me/guile-optimization&gt;Read on the website: &lt;/a&gt;
        Optimizing Guile Scheme is not always obvious. This post is a collection of takeaways from optimizing a heavily numeric piece of code.
      </description>
    </item>
    <item>
      <title>Object-Oriented C: A Primer</title>
      <author>rss@aartaka.me (Artyom Bologov)</author>
      <link>https://aartaka.me/oop-c</link>
      <guid>https://aartaka.me/oop-c</guid>
      <pubDate>Mon, 8 Apr 2024 01:19:20 +0400</pubDate>
      <description>
        &lt;a href=https://aartaka.me/oop-c&gt;Read on the website: &lt;/a&gt;
        One can go Object-Oriented in C, and do so with decent success. Although it's definitely not quite the popular version of OOP everyone is conditioned to.
      </description>
    </item>
    <item>
      <title>Falsehoods Programmers Believe About HTML</title>
      <author>rss@aartaka.me (Artyom Bologov)</author>
      <link>https://aartaka.me/falsehoods-html</link>
      <guid>https://aartaka.me/falsehoods-html</guid>
      <pubDate>Fri, 29 Mar 2024 20:47:00 +0400</pubDate>
      <description>
        &lt;a href=https://aartaka.me/falsehoods-html&gt;Read on the website: &lt;/a&gt;
        There are many things programmers believe about HTML that are not necessarily true. Here're some.
      </description>
    </item>
    <item>
      <title>Text UIs != Terminal UIs</title>
      <author>rss@aartaka.me (Artyom Bologov)</author>
      <link>https://aartaka.me/tui-not-tui</link>
      <guid>https://aartaka.me/tui-not-tui</guid>
      <pubDate>Fri, 1 Mar 2024 23:00:00 +0400</pubDate>
      <description>
        &lt;a href=https://aartaka.me/tui-not-tui&gt;Read on the website: &lt;/a&gt;
        TUI is an ambiguous term, meaning either of 'terminal' or 'text' user interface. The difference is even more pronounced now, with chat interfaces and assistive tech. So let's stop calling TUIs 'text' and call them 'terminal'—by their real name. Reserving 'text' for more appropriate conversational UIs.
      </description>
    </item>
    <item>
      <title>Moving From Nyxt To Surf</title>
      <author>rss@aartaka.me (Artyom Bologov)</author>
      <link>https://aartaka.me/nyxt-to-surf</link>
      <guid>https://aartaka.me/nyxt-to-surf</guid>
      <pubDate>Wed, 14 Feb 2024 19:22:00 +0400</pubDate>
      <description>
        &lt;a href=https://aartaka.me/nyxt-to-surf&gt;Read on the website: &lt;/a&gt;
        I switched to Surf because of habit switch from distracted kitchen sinks to focused app-like web browsing.
      </description>
    </item>
    <item>
      <title>Lisp Design Patterns</title>
      <author>rss@aartaka.me (Artyom Bologov)</author>
      <link>https://aartaka.me/lisp-design-patterns</link>
      <guid>https://aartaka.me/lisp-design-patterns</guid>
      <pubDate>Thu, 25 Jan 2024 23:04:00 +0400</pubDate>
      <description>
        &lt;a href=https://aartaka.me/lisp-design-patterns&gt;Read on the website: &lt;/a&gt;
        Lisp projects might be smaller and neater that other tech. But still, there are emergent patterns in any software. So here's an arbitrary list of design patterns I found in Lisp codebases.
      </description>
    </item>
    <item>
      <title>Regex Pronouns?</title>
      <author>rss@aartaka.me (Artyom Bologov)</author>
      <link>https://aartaka.me/regex-pronouns</link>
      <guid>https://aartaka.me/regex-pronouns</guid>
      <pubDate>Sat, 12 Dec 2023 19:23:00 +0400</pubDate>
      <description>
        &lt;a href=https://aartaka.me/regex-pronouns&gt;Read on the website: &lt;/a&gt;
        Pronouns are important. They are part of one's identity, after all. But what if one also identifies as a programmer? Regexes as pronoun listing!
      </description>
    </item>
    <item>
      <title>Making Sense of Lambda Calculus 1: Ignorant, Lazy, and Greedy Evaluation</title>
      <author>rss@aartaka.me (Artyom Bologov)</author>
      <link>https://aartaka.me/lambda-1</link>
      <guid>https://aartaka.me/lambda-1</guid>
      <pubDate>Sat, 30 Dec 2023 22:38:00 +0400</pubDate>
      <description>
        &lt;a href=https://aartaka.me/lambda-1&gt;Read on the website: &lt;/a&gt;
        Lambda Calculus is a strong model for computation, but computing examples in it often feels off. In this post, I'm trying to understand how Lambda Calculus evaluation/reduction actually works.
      </description>
    </item>
    <item>
      <title>What Writing 2K+ Lines of Brainfuck Taught Me</title>
      <author>rss@aartaka.me (Artyom Bologov)</author>
      <link>https://aartaka.me/brainfuck-lessons</link>
      <guid>https://aartaka.me/brainfuck-lessons</guid>
      <pubDate>Thu, 21 Dec 2023 18:12:00 +0400</pubDate>
      <description>
        &lt;a href=https://aartaka.me/brainfuck-lessons&gt;Read on the website: &lt;/a&gt;
        I am a Brainfuck programmer. I made some projects that caused me immence pai... joy. I learned something from these, and you can too!
      </description>
    </item>
    <item>
      <title>Making Sense of Lambda Calculus 0: Abstration, Reduction, Substitution?</title>
      <author>rss@aartaka.me (Artyom Bologov)</author>
      <link>https://aartaka.me/lambda-0</link>
      <guid>https://aartaka.me/lambda-0</guid>
      <pubDate>Wed, 20 Dec 2023 00:19:00 +0400</pubDate>
      <description>
        &lt;a href=https://aartaka.me/lambda-0&gt;Read on the website: &lt;/a&gt;
        Lambda Calculus is a fascinating idea, but it's not immediately obvious. In this post, I'm trying to understand and explain the basic terms used in Lambda Calculus.
      </description>
    </item>
    <item>
      <title>I Generated This Post With C Preprocessor</title>
      <author>rss@aartaka.me (Artyom Bologov)</author>
      <link>https://aartaka.me/this-post-is-cpp</link>
      <guid>https://aartaka.me/this-post-is-cpp</guid>
      <pubDate>Sun, 3 Dec 2023 21:39:00 +0400</pubDate>
      <description>
        &lt;a href=https://aartaka.me/this-post-is-cpp&gt;Read on the website: &lt;/a&gt;
        Yes, you can use C preprocessor as a website generator.
      </description>
    </item>
    <item>
      <title>Making C Code Prettier</title>
      <author>rss@aartaka.me (Artyom Bologov)</author>
      <link>https://aartaka.me/making-c-prettier</link>
      <guid>https://aartaka.me/making-c-prettier</guid>
      <pubDate>Sat, 25 Nov 2023 18:03:00 +0400</pubDate>
      <description>
        &lt;a href=https://aartaka.me/making-c-prettier&gt;Read on the website: &lt;/a&gt;
        C code might be ugly at times. But it can also be pretty! Here are some features and snippets with pretty C code.
      </description>
    </item>
    <item>
      <title>Making C Code Uglier</title>
      <author>rss@aartaka.me (Artyom Bologov)</author>
      <link>https://aartaka.me/making-c-uglier</link>
      <guid>https://aartaka.me/making-c-uglier</guid>
      <pubDate>Sat, 4 Nov 2023 22:14:42 +0400</pubDate>
      <description>
        &lt;a href=https://aartaka.me/making-c-uglier&gt;Read on the website: &lt;/a&gt;
        C code is scary. It's often hard to read and has lots of footguns. But it can get even uglier than you imagine. Lo and behold!
      </description>
    </item>
    <item>
      <title>Write Hypertext, not Plaintext</title>
      <author>rss@aartaka.me (Artyom Bologov)</author>
      <link>https://aartaka.me/hypertext</link>
      <guid>https://aartaka.me/hypertext</guid>
      <pubDate>Mon, 4 Sep 2023 23:41:29 +0400</pubDate>
      <description>
        &lt;a href=https://aartaka.me/hypertext&gt;Read on the website: &lt;/a&gt;
        Living a plaintext-only life is tempting. But the further one goes with plaintext, the more they re-invent Markdown or HTML. Let's just give up and live hypertext life instead.
      </description>
    </item>
    <item>
      <title>Digital Bum: Finding a Home/lessness on the Internet</title>
      <author>rss@aartaka.me (Artyom Bologov)</author>
      <link>https://aartaka.me/digital-bum</link>
      <guid>https://aartaka.me/digital-bum</guid>
      <pubDate>Sat, 29 Jul 2023 17:13:00 +0400</pubDate>
      <description>
        &lt;a href=https://aartaka.me/digital-bum&gt;Read on the website: &lt;/a&gt;
        Internet grew out of a non-commercial academic network with free resources for everyone. Can one get back to this dream of free Internet and build a lifestyle out of it?
      </description>
    </item>
    <item>
      <title>This Post is Written in Lisp</title>
      <author>rss@aartaka.me (Artyom Bologov)</author>
      <link>https://aartaka.me/this-post-is-lisp</link>
      <guid>https://aartaka.me/this-post-is-lisp</guid>
      <pubDate>Fri, 7 Jul 2023 23:23:05 +0400</pubDate>
      <description>
        &lt;a href=https://aartaka.me/this-post-is-lisp&gt;Read on the website: &lt;/a&gt;
        This is probably some fanatic with weird AST magic, you say. But if this magic allows one writing with tab-completion, automatic HTML boilerplate, and other goodies—then why not try it? 😉
      </description>
    </item>
    <item>
      <title>Designing for Exploitation: How Meta-Programming Leads to Safer Code</title>
      <author>rss@aartaka.me (Artyom Bologov)</author>
      <link>https://aartaka.me/design-for-exploitation</link>
      <guid>https://aartaka.me/design-for-exploitation</guid>
      <pubDate>Wed, 14 Sep 2022 22:06:14 +0400</pubDate>
      <description>
        &lt;a href=https://aartaka.me/design-for-exploitation&gt;Read on the website: &lt;/a&gt;
        Security tip: You should use meta-programming abilities of your technology (I mostly mean programming languages there) as much as possible, and you should allow your users to program your program by exposing programming languages to them.
      </description>
    </item>
    <item>
      <title>Tripod, the restrictively productive blog engine</title>
      <author>rss@aartaka.me (Artyom Bologov)</author>
      <link>https://aartaka.me/tripod</link>
      <guid>https://aartaka.me/tripod</guid>
      <pubDate>Sun, 4 Sep 2022 13:55:59 +0400</pubDate>
      <description>
        &lt;a href=https://aartaka.me/tripod&gt;Read on the website: &lt;/a&gt;
        Okay, so you want to have your blog backed by a good blog engine?
      </description>
    </item>
  </channel>
</rss>
